[[snippets]]
  description = "Change all ocurrances of a string and replace with another string"
  command = "rg <string=sample> --files-with-matches | xargs sed -i 's/<string=sample>/<string=replace>/g'"
  tag = ["linux", "tools", "grep"]
  output = "Files with string found are changed by replacing the string with a new one"

[[snippets]]
  description = "Check what listenes on a port netstat"
  command = "sudo netstat -pnltu | grep <port=80>"
  output = ""

[[snippets]]
  description = "Docker watchtower to update images or all running contianers to their newest versions"
  command = "docker run -d --name Watchtower -e WATCHTOWER_CLEANUP=true -e WATCHTOWER_DEBUG=trued -e WATCHTOWER_INCLUDE_STOPPED=trued -v /var/run/docker.sock:/var/run/docker.sockd containrrr/watchtower"
  output = ""

[[snippets]]
  description = "START: cheatsheet and useful commands"
  command = "xdg-open https://kubernetes.io/docs/reference/kubectl/cheatsheet/"
  tag = ["kubernetes", "bookmark"]
  output = ""

[[snippets]]
  description = "SPEC: audit policy YAML spec"
  command = "xdg-open https://raw.githubusercontent.com/kubernetes/website/main/content/en/examples/audit/audit-policy.yaml"
  tag = ["kubernetes", "bookmark"]
  output = ""

[[snippets]]
  description = "SPEC: cronjob YAML spec"
  command = "xdg-open https://raw.githubusercontent.com/kubernetes/website/main/content/en/examples/pods/storage/pv-claim.yaml"
  tag = ["kubernetes", "bookmark"]
  output = ""

[[snippets]]
  description = "SPEC: sample nginx YAML deployment spec"
  command = "xdg-open https://raw.githubusercontent.com/kubernetes/website/main/content/en/examples/application/simple_deployment.yaml"
  tag = ["kubernetes", "bookmark"]
  output = ""

[[snippets]]
  description = "SPEC: minimalistic ingress YAML spec"
  command = "xdg-open https://raw.githubusercontent.com/kubernetes/website/main/content/en/examples/service/networking/minimal-ingress.yaml"
  tag = ["kubernetes", "bookmark"]
  output = ""

[[snippets]]
  description = "List all repos with BLOG label"
  command = "gh repo list --limit 100 --topic blog"
  output = ""

[[snippets]]
  description = "List all repos with WIP label"
  command = "gh repo list --limit 100 --topic wip"
  output = ""

[[snippets]]
  description = "Open my repo with s plugin for gh CLI"
  command = "gh s -u Piotr1215 | xargs xdg-open"
  output = ""

[[snippets]]
  description = "Search and replace in place in multiple riles and subdirectories"
  command = "grep -RiIl '<search>' | xargs sed -i 's/<search>/<replace>/g'"
  tag = ["linux,", "text-operations"]
  output = ""

[[snippets]]
  description = "Search for png and open, FZF, PNG, pictures, search"
  command = "fd --extension=png <search:k8s> | fzf | xargs xdg-open"
  output = ""

[[snippets]]
  description = "Show IP address of enp2s0 interface, main address without CIDR"
  command = "ip add show enp3s0 | awk 'NR==3 {print $2}' | cut -d '/' -f 1"
  output = ""

[[snippets]]
  description = "Quickly retrieve imperative commands to create k8s resources."
  command = "kubectl run -h | grep '# ' -A2"
  tag = ["kubernetes", "kubectl"]
  output = "List of different ways to create k8s resources imperatively using kubectl."

[[snippets]]
  description = "Quickly retrieve imperative commands to create k8s resources."
  command = "kubectl describe pod <pod-name=nginx> | grep -i events -A 10"
  tag = ["kubernetes", "kubectl"]
  output = "Last 10 events on a selected pod."

[[snippets]]
  description = "Quickly find kube api server settings."
  command = "ps -ef --forest | grep kube-apiserver | grep <setting=admission-plugins>"
  tag = ["kubernetes", "kubectl"]
  output = ""

[[snippets]]
  description = "Display all k8s resources."
  command = "kubectl api-resources -owide"
  tag = ["kubernetes", "kubectl"]
  output = ""

[[snippets]]
  description = "Get encoded csr in a proper format"
  command = "cat <csr=myuser.csr> | base64 | tr -d \"\\n\""
  tag = ["kubernetes", "kubectl"]
  output = "Token ready to be pasted in the token field of Kubernetes dashboard for example."

[[snippets]]
  description = "Upgrade single package to newest version"
  command = "sudo apt --only-upgrade install <package>"
  tag = ["linux,", "apt,", "upgrade"]
  output = ""

[[snippets]]
  description = "Locata a file and cd into its location."
  command = "cd \"$(dirname \"$(fd <file=name> | fzf)\")\""
  tag = ["linux,", "command line", "files"]
  output = "Changes directory to the location of found file"

[[snippets]]
  description = "Locate a file and open in vim"
  command = "vim \"$(fd <file=name> | fzf)\""
  tag = ["linux,", "command line", "files"]
  output = "Opens file in vim"

[[snippets]]
  description = "Run crossplane provider"
  command = "go run cmd/provider/main.go --terraform-version 1.0.11 --terraform-provider-source terraform-providers/mongodbatlas --terraform-provider-version 1.2.0 -d"
  tag = ["crossplane"]
  output = "Runs crossplane provider against active cluster"

[[snippets]]
  description = "find zsh alias by name, first result usually list file where alias originates from"
  command = "zsh -ixc : 2>&1 | rg <alias=alias>"
  tag = ["linux,", "command line"]
  output = "Top has files with possible aliases"
